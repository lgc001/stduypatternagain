https://www.cnblogs.com/edisonchou/p/6683262.html
简单工厂模式并不属于GoF 23种经典设计模式，但通常将它作为学习其他工厂模式的基础。

简单工厂（Simple Factory）模式：定义一个工厂类，它可以根据参数的不同返回不同类的实例，被创建的实例通常都具有共同的父类。
因为在简单工厂模式中用于创建实例的方法是静态（static）方法，因此简单工厂模式又被称为静态工厂方法模式，它属于创建型模式。

简单工厂模式的要点在于：当你需要什么，只需要传入一个正确的参数，就可以获取你所需的对象，而无须知道其创建细节。

4.1 主要优点
实现了对象创建和使用的分离：客户端可以免除直接创建产品对象的职责，而仅仅“消费”产品。
客户端无须知道所创建的具体产品类的类名，只需要知道具体产品类所对应的的参数即可。
通过引入配置文件，可以在不修改任何客户端代码地情况下更换和增加新的具体产品类，在一定程度上提高了系统的灵活性。
4.2 主要缺点
由于工厂类集中了所有产品的创建逻辑，职责过重，一旦不能正常工作，整个系统都要受影响。
使用简单工厂模式势必会增加系统中类的个数（引入新的工厂类），增加了系统的复杂度和理解难度。
系统扩展困难，一旦添加新产品就不得不修改工厂逻辑，在产品类型较多时，有可能会造成工厂逻辑过于复杂，不利于系统的扩展和维护。
简单工厂模式由于使用了静态工厂方法，造成工厂角色无法形成基于继承的等级结构。
4.3 适用场景
工厂类负责创建的对象比较少，由于创建的对象较少，不会造成工厂方法中的业务逻辑太过复杂。
客户端只需要知道传入工厂类的参数，对于如何创建对象并不关心。

但是存在一个很严重的问题：当系统中需要引入新产品时，由于静态工厂方法通过所传入参数的不同来创建不同的产品，
这必定要修改工厂类的源代码，将违背开闭原则。